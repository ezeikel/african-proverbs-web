// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider  = "postgresql"
  url       = env("POSTGRES_PRISMA_URL") // uses connection pooling
  directUrl = env("POSTGRES_URL_NON_POOLING") // uses a direct connection
}

enum Region {
  NORTHERN_AFRICA
  SUB_SAHARAN_AFRICA
  EASTERN_AFRICA
  CENTRAL_AFRICA
  SOUTHERN_AFRICA
  WESTERN_AFRICA
}

// 54 countries in Africa
enum Country {
  ALGERIA
  ANGOLA
  BENIN
  BOTSWANA
  BURKINA_FASO
  BURUNDI
  CAPE_VERDE
  CAMEROON
  CENTRAL_AFRICAN_REPUBLIC
  CHAD
  COMOROS
  CONGO
  DEMOCRATIC_REPUBLIC_OF_THE_CONGO
  DJIBOUTI
  EGYPT
  EQUATORIAL_GUINEA
  ERITREA
  ESWATINI
  ETHIOPIA
  GABON
  GAMBIA
  GHANA
  GUINEA
  GUINEA_BISSAU
  IVORY_COAST
  KENYA
  LESOTHO
  LIBERIA
  LIBYA
  MADAGASCAR
  MALAWI
  MALI
  MAURITANIA
  MAURITIUS
  MOROCCO
  MOZAMBIQUE
  NAMIBIA
  NIGER
  NIGERIA
  RWANDA
  SAO_TOME_AND_PRINCIPE
  SENEGAL
  SEYCHELLES
  SIERRA_LEONE
  SOMALIA
  SOUTH_AFRICA
  SOUTH_SUDAN
  SUDAN
  TANZANIA
  TOGO
  TUNISIA
  UGANDA
  ZAMBIA
  ZIMBABWE
}

enum Tribe {
  ASHANTI
  ZULU
  MASAI
  HAUSA
}

enum Category {
  WISDOM
  LIFE
  LOVE
  SUCCESS
}

enum Role {
  ADMIN
  USER
}

model Proverb {
  id        String    @id @default(cuid())
  text      String
  region    Region?
  country   Country?
  tribe     Tribe?
  category  Category?
  createdAt DateTime  @default(now()) @map(name: "created_at")
  updatedAt DateTime  @updatedAt @map(name: "updated_at")
  users     User[]    @relation("UserFavorites")
  comments  Comment[]
  likes     User[]    @relation("UserLikes") // Updated for likes
  Like      Like[]

  @@map(name: "proverbs")
}

model User {
  id            String    @id @default(cuid())
  name          String?
  email         String?   @unique
  role          Role      @default(USER)
  proverbs      Proverb[] @relation("UserFavorites")
  createdAt     DateTime  @default(now()) @map(name: "created_at")
  updatedAt     DateTime  @updatedAt @map(name: "updated_at")
  comments      Comment[]
  likedProverbs Proverb[] @relation("UserLikes") // This replaces the likes field for the correct many-to-many relation
  Like          Like[]

  @@map(name: "users")
}

model Comment {
  id        String   @id @default(cuid())
  text      String
  userId    String
  proverbId String
  user      User     @relation(fields: [userId], references: [id])
  proverb   Proverb  @relation(fields: [proverbId], references: [id])
  createdAt DateTime @default(now())

  @@map(name: "comments")
}

model Like {
  id        String   @id @default(cuid())
  userId    String
  proverbId String
  user      User     @relation(fields: [userId], references: [id])
  proverb   Proverb  @relation(fields: [proverbId], references: [id])
  createdAt DateTime @default(now())

  @@unique([userId, proverbId]) // ensures a user can only like a proverb once
  @@map(name: "likes")
}
